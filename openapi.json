{
  "openapi": "3.1.0",
  "info": {
    "title": "UE Capability Parser - OpenAPI 3.1",
    "description": "This is the OpenApi specification of UE Capability Parser server mode. Find out more [here](https://github.com/HandyMenny/uecapabilityparser)",
    "license": {
      "name": "MIT",
      "url": "https://raw.githubusercontent.com/HandyMenny/uecapabilityparser/main/LICENSE"
    },
    "version": "0.2.0"
  },
  "servers": [
    {
      "url": "/"
    },
    {
      "url": "{scheme}://{domain}:{port}/",
      "variables": {
        "scheme": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http"
        },
        "domain": {
          "default": "localhost"
        },
        "port": {
          "default": "8080"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "parse",
      "description": "Parse Capabilities"
    },
    {
      "name": "convert",
      "description": "Convert Capabilities"
    },
    {
      "name": "store",
      "description": "Manage stored capabilities"
    },
    {
      "name": "version",
      "description": "Get parser version"
    }
  ],
  "paths": {
    "/parse/": {
      "post": {
        "tags": [
          "parse"
        ],
        "summary": "Parse an UE Capability",
        "description": "Parse an UE Capability",
        "operationId": "parse",
        "requestBody": {
          "description": "UE Capability",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Capabilities"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "examples": [
                    "Bad Request"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/csv/": {
      "post": {
        "tags": [
          "convert"
        ],
        "summary": "Convert combos to csv",
        "description": "Convert combos to csv",
        "operationId": "csv",
        "requestBody": {
          "description": "List of Combos and their type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "examples": [
                    "combo;band1;band2;band3;band4;class1;class2;class3;class4;mimo1;mimo2;mimo3;mimo4;ul1;ul2;ul3;ul4;ULmimo1;ULmimo2;ULmimo3;ULmimo4;DLmod1;DLmod2;DLmod3;DLmod4;ULmod1;ULmod2;ULmod3;ULmod4;bcs\n3C4A-0;3;;;;C;;;;4;;;;A;;;;1;;;;;;;;;;;;0\n3A4A-3A4-m7;3;3;;;A;A;;;4;4;;;A;;;;1;;;;;;;;;;;;0, 1, 2"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "examples": [
                    "Bad Request"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "summary": "Get Parser Version",
        "description": "Get Parser Version",
        "operationId": "version",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "examples": [
                        "0.2.0"
                      ]
                    }
                  },
                  "required": [
                    "version"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/store/status": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Check if store is enabled",
        "description": "Check if store is enabled",
        "operationId": "store-status",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "examples": [
                        "true"
                      ]
                    }
                  },
                  "required": [
                    "enabled"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/store/list": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get a list of stored capabilities indexes",
        "description": "Get a list of stored capabilities indexes",
        "operationId": "store-list",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryIndex"
                }
              }
            }
          }
        }
      }
    },
    "/store/getItem": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get the index of a stored capability",
        "description": "Get the index of a stored capability",
        "operationId": "store-item",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexLine"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        ]
      }
    },
    "/store/getInput": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get Stored Input",
        "description": "Get Stored Input",
        "operationId": "store-input",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/octet-stream": {
                "example": "combo;band1;band2;band3;band4;class1;class2;class3;class4;mimo1;mimo2;mimo3;mimo4;ul1;ul2;ul3;ul4;ULmimo1;ULmimo2;ULmimo3;ULmimo4;DLmod1;DLmod2;DLmod3;DLmod4;ULmod1;ULmod2;ULmod3;ULmod4;bcs\n3C4A-0;3;;;;C;;;;4;;;;A;;;;1;;;;;;;;;;;;0\n3A4A-3A4-m7;3;3;;;A;A;;;4;4;;;A;;;;1;;;;;;;;;;;;0, 1, 2"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6-0"
          }
        ]
      }
    },
    "/store/getOutput": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get Stored Output",
        "description": "Get the parser output of the given capability",
        "operationId": "store-output",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Capabilities"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ParseRequest": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "H",
              "W",
              "N",
              "C",
              "CNR",
              "E",
              "Q",
              "QLTE",
              "QNR",
              "M",
              "O",
              "QC",
              "RF"
            ],
            "examples": [
              "C"
            ]
          },
          "input": {
            "type": "string",
            "contentEncoding": "base64",
            "examples": [
              "M0EyQS0wOw=="
            ]
          },
          "inputNR": {
            "type": "string",
            "contentEncoding": "base64",
            "examples": [
              "M0EyQS0wOw=="
            ]
          },
          "inputENDC": {
            "type": "string",
            "contentEncoding": "base64",
            "examples": [
              "M0EyQS0wOw=="
            ]
          },
          "defaultNR": {
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ]
          },
          "multiple0xB826": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "deprecated": true
          }
        },
        "required": [
          "type",
          "input"
        ]
      },
      "ConvertRequest": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "lteca",
              "endc",
              "nrca",
              "nrdc"
            ],
            "examples": [
              "lteca"
            ]
          },
          "input": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboLte"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboEnDc"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboNr"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboNrDc"
                }
              }
            ]
          }
        },
        "required": [
          "type",
          "input"
        ]
      },
      "Capabilities": {
        "type": "object",
        "properties": {
          "lteca": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboLte"
            }
          },
          "endc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboEnDc"
            }
          },
          "nrca": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboNr"
            }
          },
          "nrdc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboNrDc"
            }
          },
          "lteBands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandLteDetails"
            }
          },
          "nrBands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandNrDetails"
            }
          },
          "nrNsaBandsEutra": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandBoxed"
            },
            "examples": [
              [
                {
                  "band": 78
                },
                {
                  "band": 79
                }
              ]
            ]
          },
          "nrSaBandsEutra": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandBoxed"
            },
            "examples": [
              [
                {
                  "band": 78
                },
                {
                  "band": 79
                }
              ]
            ]
          },
          "lteCategoryDl": {
            "type": "number",
            "examples": [
              12
            ],
            "default": 0
          },
          "lteCategoryUl": {
            "type": "number",
            "examples": [
              12
            ],
            "default": 0
          },
          "altTbsIndexes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "26a",
                "33a",
                "33b"
              ]
            ]
          },
          "ueCapFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IUeCapabilityFilter"
            }
          },
          "logType": {
            "type": "string",
            "examples": [
              "W"
            ]
          },
          "parserVersion": {
            "type": "string",
            "examples": [
              "0.2.0"
            ]
          },
          "timestamp": {
            "type": "number",
            "examples": [
              1683384284779
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "examples": [
              {
                "description": "description",
                "processingTime": "10 ms"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "default": "",
            "examples": [
              "439e65a3-36b1-477a-a44d-117de86b094f"
            ]
          }
        },
        "required": [
          "logType",
          "parserVersion",
          "timestamp",
          "metadata"
        ]
      },
      "ComboLte": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentLte"
            }
          },
          "bcs": {
            "$ref": "#/components/schemas/BCS"
          }
        },
        "required": [
          "components"
        ]
      },
      "ComboEnDc": {
        "type": "object",
        "properties": {
          "componentsLte": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentLte"
            }
          },
          "componentsNr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentNr"
            }
          },
          "bcsNr": {
            "$ref": "#/components/schemas/BCS"
          },
          "bcsEutra": {
            "$ref": "#/components/schemas/BCS"
          },
          "bcsIntraEndc": {
            "$ref": "#/components/schemas/BCS"
          }
        },
        "required": [
          "componentsLte",
          "componentsNr"
        ]
      },
      "ComboNr": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentNr"
            }
          },
          "bcs": {
            "$ref": "#/components/schemas/BCS"
          }
        },
        "required": [
          "components"
        ]
      },
      "ComboNrDc": {
        "type": "object",
        "properties": {
          "componentsFr1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentNr"
            }
          },
          "componentsFr2": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentNr"
            }
          },
          "bcs": {
            "$ref": "#/components/schemas/BCS"
          }
        },
        "required": [
          "componentsFr1",
          "componentsFr2"
        ]
      },
      "ComponentLte": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "1"
            ]
          },
          "bwClassDl": {
            "type": "string",
            "default": "0",
            "examples": [
              "A"
            ]
          },
          "bwClassUl": {
            "type": "string",
            "default": "0",
            "examples": [
              "A"
            ]
          },
          "mimoDl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "mimoUl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "modulationDl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "modulationUl": {
            "$ref": "#/components/schemas/Modulation"
          }
        },
        "required": [
          "band"
        ]
      },
      "ComponentNr": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "78"
            ]
          },
          "bwClassDl": {
            "type": "string",
            "default": "0",
            "examples": [
              "A"
            ]
          },
          "bwClassUl": {
            "type": "string",
            "default": "0",
            "examples": [
              "A"
            ]
          },
          "mimoDl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "mimoUl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "modulationDl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "modulationUl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "bw90mhzSupported": {
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ]
          },
          "maxScs": {
            "type": "number",
            "default": 0,
            "examples": [
              30
            ]
          },
          "maxBw": {
            "type": "number",
            "default": 0,
            "examples": [
              100
            ],
            "deprecated": true
          },
          "maxBwDl": {
            "$ref": "#/components/schemas/Bandwidth"
          },
          "maxBwUl": {
            "$ref": "#/components/schemas/Bandwidth"
          }
        },
        "required": [
          "band"
        ]
      },
      "BandBoxed": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "1"
            ]
          }
        },
        "required": [
          "band"
        ]
      },
      "BandLteDetails": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "1"
            ]
          },
          "mimoDl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "mimoUl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "modulationDl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "modulationUl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "powerClass": {
            "$ref": "#/components/schemas/PowerClass"
          }
        },
        "required": [
          "band"
        ]
      },
      "BandNrDetails": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "78"
            ]
          },
          "mimoDl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "mimoUl": {
            "$ref": "#/components/schemas/Mimo"
          },
          "modulationDl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "modulationUl": {
            "$ref": "#/components/schemas/Modulation"
          },
          "powerClass": {
            "$ref": "#/components/schemas/PowerClass"
          },
          "maxUplinkDutyCycle": {
            "type": "number",
            "default": 0,
            "examples": [
              50
            ]
          },
          "bandwidths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BwsNr"
            }
          },
          "rateMatchingLteCrs": {
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "required": [
          "band"
        ]
      },
      "Mimo": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SingleMimo"
          },
          {
            "$ref": "#/components/schemas/MixedMimo"
          },
          {
            "$ref": "#/components/schemas/EmptyMimo"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "single": "#/components/schemas/SingleMimo",
            "mixed": "#/components/schemas/MixedMimo",
            "empty": "#/components/schemas/EmptyMimo"
          }
        },
        "examples": [
          {
            "type": "single",
            "value": 2
          }
        ]
      },
      "EmptyMimo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "empty"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "MixedMimo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "mixed"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "SingleMimo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "single"
            ]
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "ModulationOrder": {
        "type": "string",
        "enum": [
          "none",
          "qam16",
          "qam64",
          "qam256",
          "qam1024"
        ]
      },
      "Modulation": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SingleModulation"
          },
          {
            "$ref": "#/components/schemas/MixedModulation"
          },
          {
            "$ref": "#/components/schemas/EmptyModulation"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "single": "#/components/schemas/SingleModulation",
            "mixed": "#/components/schemas/MixedModulation",
            "empty": "#/components/schemas/EmptyModulation"
          }
        },
        "examples": [
          {
            "type": "single",
            "value": "qam64"
          }
        ]
      },
      "EmptyModulation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "empty"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "MixedModulation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "mixed"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModulationOrder"
            }
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "SingleModulation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "single"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/ModulationOrder"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "Bandwidth": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SingleBandwidth"
          },
          {
            "$ref": "#/components/schemas/MixedBandwidth"
          },
          {
            "$ref": "#/components/schemas/EmptyBandwidth"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "single": "#/components/schemas/SingleBandwidth",
            "mixed": "#/components/schemas/MixedBandwidth",
            "empty": "#/components/schemas/EmptyBandwidth"
          }
        },
        "examples": [
          {
            "type": "single",
            "value": "100"
          }
        ]
      },
      "EmptyBandwidth": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "empty"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "MixedBandwidth": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "mixed"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "SingleBandwidth": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "single"
            ]
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "PowerClass": {
        "type": "string",
        "enum": [
          "none",
          "pc1",
          "pc1dot5",
          "pc2",
          "pc3",
          "pc4",
          "pc5",
          "pc6",
          "pc7"
        ],
        "examples": [
          "pc2"
        ]
      },
      "BwsNr": {
        "type": "object",
        "properties": {
          "scs": {
            "type": "number",
            "examples": [
              30
            ]
          },
          "bandwidthsDl": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "examples": [
              [
                100,
                80
              ]
            ]
          },
          "bandwidthsUl": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "examples": [
              [
                100,
                80
              ]
            ]
          }
        },
        "required": [
          "scs",
          "bandwidthsDl",
          "bandwidthsUl"
        ]
      },
      "BCS": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SingleBCS"
          },
          {
            "$ref": "#/components/schemas/MultiBCS"
          },
          {
            "$ref": "#/components/schemas/AllBCS"
          },
          {
            "$ref": "#/components/schemas/EmptyBCS"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "single": "#/components/schemas/SingleBCS",
            "multi": "#/components/schemas/MultiBCS",
            "all": "#/components/schemas/AllBCS",
            "empty": "#/components/schemas/EmptyBCS"
          }
        },
        "examples": [
          {
            "type": "single",
            "value": 0
          }
        ]
      },
      "EmptyBCS": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "empty"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "AllBCS": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "all"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "MultiBCS": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "multi"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "SingleBCS": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "single"
            ]
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "IUeCapabilityFilter": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UeCapabilityFilterLte"
          },
          {
            "$ref": "#/components/schemas/UeCapabilityFilterNr"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "UeCapabilityFilterLte": "#/components/schemas/UeCapabilityFilterLte",
            "UeCapabilityFilterNr": "#/components/schemas/UeCapabilityFilterNr"
          }
        }
      },
      "UeCapabilityFilterLte": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UeCapabilityFilterLte"
            ]
          },
          "rat": {
            "$ref": "#/components/schemas/Rat",
            "examples": [
              "EUTRA"
            ]
          },
          "lteBands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandBoxed"
            }
          },
          "reducedFormat": {
            "type": "boolean"
          },
          "reducedIntNonContComb": {
            "type": "boolean"
          },
          "skipFallbackCombRequested": {
            "type": "boolean"
          },
          "diffFallbackCombList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboLte"
            },
            "examples": [
              {
                "components": [
                  {
                    "band": 1,
                    "bwClassDl": "A",
                    "bwClassUl": "A"
                  },
                  {
                    "band": 3,
                    "bwClassDl": "C"
                  }
                ]
              }
            ]
          },
          "maxCCsDl": {
            "type": "number",
            "default": 0,
            "examples": [
              5
            ]
          },
          "maxCCsUl": {
            "type": "number",
            "default": 0,
            "examples": [
              2
            ]
          },
          "includeNrDc": {
            "type": "boolean"
          },
          "includeNeDc": {
            "type": "boolean"
          },
          "omitEnDc": {
            "type": "boolean"
          },
          "uplinkTxSwitchRequest": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ],
        "examples": [
          {
            "type": "UeCapabilityFilterLte",
            "rat": "EUTRA",
            "lteBands": [
              {
                "band": 1
              }
            ],
            "reducedFormat": true,
            "reducedIntNonContComb": true,
            "skipFallbackCombRequested": true,
            "diffFallbackCombList": {
              "components": [
                {
                  "band": 1,
                  "bwClassDl": "A",
                  "bwClassUl": "A"
                },
                {
                  "band": 3,
                  "bwClassDl": "C"
                }
              ]
            },
            "maxCCsDl": 5,
            "maxCCsUl": 2,
            "includeNrDc": true,
            "includeNeDc": true,
            "omitEnDc": true,
            "uplinkTxSwitchRequest": true
          }
        ]
      },
      "UeCapabilityFilterNr": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UeCapabilityFilterNr"
            ]
          },
          "rat": {
            "$ref": "#/components/schemas/Rat",
            "examples": [
              "NR"
            ]
          },
          "lteBands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandFilterLte"
            }
          },
          "nrBands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BandFilterNr"
            }
          },
          "eutraNrOnly": {
            "type": "boolean"
          },
          "includeNrDc": {
            "type": "boolean"
          },
          "includeNeDc": {
            "type": "boolean"
          },
          "omitEnDc": {
            "type": "boolean"
          },
          "uplinkTxSwitchRequest": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ],
        "examples": [
          {
            "type": "UeCapabilityFilterNr",
            "rat": "NR",
            "lteBands": [
              {
                "band": 1,
                "bwClassDl": "A",
                "bwClassUl": "A"
              }
            ],
            "nrBands": [
              {
                "band": 1,
                "maxBwDl": 100,
                "maxBwUl": 100,
                "maxCCsDl": 1,
                "maxCCsUl": 1
              }
            ],
            "includeNrDc": true,
            "includeNeDc": true,
            "omitEnDc": true,
            "uplinkTxSwitchRequest": true,
            "eutraNrOnly": true
          }
        ]
      },
      "BandFilterLte": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "1"
            ]
          },
          "bwClassDl": {
            "type": "string",
            "default": "0",
            "examples": [
              "A"
            ]
          },
          "bwClassUl": {
            "type": "string",
            "default": "0",
            "examples": [
              "A"
            ]
          }
        },
        "required": [
          "band"
        ]
      },
      "BandFilterNr": {
        "type": "object",
        "properties": {
          "band": {
            "type": "number",
            "examples": [
              "1"
            ]
          },
          "maxBwDl": {
            "type": "number",
            "default": "0",
            "examples": [
              "100"
            ]
          },
          "maxBwUl": {
            "type": "number",
            "default": "0",
            "examples": [
              "100"
            ]
          },
          "maxCCsDl": {
            "type": "number",
            "default": "0",
            "examples": [
              "1"
            ]
          },
          "maxCCsUl": {
            "type": "number",
            "default": "0",
            "examples": [
              "1"
            ]
          }
        },
        "required": [
          "band"
        ]
      },
      "Rat": {
        "type": "string",
        "enum": [
          "EUTRA",
          "NR",
          "EUTRA_NR"
        ]
      },
      "LibraryIndex": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexLine"
            }
          }
        }
      },
      "IndexLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "3fa85f64-5717-4562-b3fc-2c963f66afa6"
            ]
          },
          "timestamp": {
            "type": "number",
            "examples": [
              1683384284779
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              "Test"
            ]
          },
          "inputs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "3fa85f64-5717-4562-b3fc-2c963f66afa6-0",
                "3fa85f64-5717-4562-b3fc-2c963f66afa6-1"
              ]
            ]
          },
          "compressed": {
            "type": "boolean",
            "default": "false"
          },
          "defaultNR": {
            "type": "boolean",
            "default": "false"
          },
          "parserVersion": {
            "type": "string",
            "examples": [
              "0.2.0"
            ]
          }
        }
      }
    }
  }
}
